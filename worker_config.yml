---
- name: Kubernetes worker node setup
  hosts: worker
  vars:
  gather_facts: false

# playbook designed with data from https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
# designed for use on ubuntu server

  tasks:

  - name: Download CNI for amd64
    ansible.builtin.get_url:
      dest: /home/{{ ansible_user }}/cni-plugins-linux-amd64-v1.1.1.tgz
      url: https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz
      mode: '0755'
      checksum: sha256:b275772da4026d2161bf8a8b41ed4786754c8a93ebfb6564006d5da7f23831e5

  - name: Create /opt/cni/bin
    become: true
    ansible.builtin.file:
      path: /opt/cni/bin
      state: directory
      mode: '0755'

  - name: Unarchive CNI
    become: true
    ansible.builtin.unarchive:
      src: /home/{{ ansible_user }}/cni-plugins-linux-amd64-v1.1.1.tgz
      dest: /opt/cni/bin
      remote_src: true

  - name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
    become: true
    ansible.builtin.shell: |
      swapoff -a
    register: my_output
    changed_when: my_output.rc != 0 # Uses the return code to define when the task has changed.

  - name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
    become: true
    ansible.builtin.replace:
      path: /etc/fstab
      regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
      replace: '# \1'

  - name: Update the apt cache
    become: true
    ansible.builtin.apt:
      update_cache: true

  - name: Remove uncomplicated firewall
    become: true
    ansible.builtin.apt:
      name: ufw
      state: absent

  - name: Install ca-certificates
    become: true
    ansible.builtin.apt:
      name: ca-certificates
      state: present

  - name: Install firewalld
    become: true
    ansible.builtin.apt:
      name: firewalld
      state: present

  - name: Create directory for keyrings
    become: true
    ansible.builtin.file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'

  - name: Download the Google Cloud public signing key
    become: true
    ansible.builtin.get_url:
      dest: /etc/apt/keyrings/kubernetes-archive-keyring.gpg
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      mode: '0755'

  - name: Create kubernetes.list file
    become: true
    ansible.builtin.file:
      path: /etc/apt/sources.list.d/kubernetes.list
      state: touch
      mode: '0755'
      access_time: preserve

  - name: Add kubernetes apt repository to kubernetes.list file
    become: true
    ansible.builtin.lineinfile:
      path: /etc/apt/sources.list.d/kubernetes.list
      line: deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main
      insertbefore: BOF

  - name: Open kubelet API port
    become: true
    ansible.posix.firewalld:
      port: 10250/tcp
      permanent: true
      state: enabled

  - name: Open NodePort services
    become: true
    ansible.posix.firewalld:
      port: 30000-32767/tcp
      permanent: true
      state: enabled

  - name: Update the apt cache 2
    become: true
    ansible.builtin.apt:
      update_cache: true

  - name: Install kubeadm
    become: true
    ansible.builtin.apt:
      name: kubeadm
      state: present

  - name: Install kubelet
    become: true
    ansible.builtin.apt:
      name: kubelet
      state: present

  - name: Install kubectl
    become: true
    ansible.builtin.apt:
      name: kubectl
      state: present
...
