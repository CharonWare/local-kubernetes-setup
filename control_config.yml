---
- name: Kubernetes control plane setup
  hosts: control
  vars:
  gather_facts: false

# playbook designed with data from https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
# designed for use on raspberry pi

  tasks:

  - name: Download runc for arm64
    ansible.builtin.get_url:
      dest: /home/{{ ansible_user }}/runc.arm64
      url: https://github.com/opencontainers/runc/releases/download/v1.1.4/runc.arm64
      mode: '0755'
      checksum: sha256:dbb71e737eaef454a406ce21fd021bd8f1b35afb7635016745992bbd7c17a223

  - name: Download CNI for arm64
    ansible.builtin.get_url:
      dest: /home/{{ ansible_user }}/cni-plugins-linux-arm64-v1.1.1.tgz
      url: https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-arm64-v1.1.1.tgz
      mode: '0755'
      checksum: sha1:d5a61b20401e5e0ff71d032bc0c4a9a2b7aed8e4

  - name: Download containerd for arm64
    ansible.builtin.get_url:
      dest: /home/{{ ansible_user }}/containerd-1.6.12-linux-arm64.tar.gz
      url: https://github.com/containerd/containerd/releases/download/v1.6.12/containerd-1.6.12-linux-arm64.tar.gz
      mode: '0755'
      checksum: sha256:0a0133336596b2d1dcafe3587eb91ab302afc28f273614e0e02300694b5457a0

  - name: Install runc
    become: true
    ansible.builtin.shell: |
      install -m 755 /home/{{ ansible_user }}/runc.arm64 /usr/local/sbin/runc
    args:
      creates: /usr/local/sbin/runc

  - name: Create /opt/cni/bin
    become: true
    ansible.builtin.file:
      path: /opt/cni/bin
      state: directory
      mode: '0755'

  - name: Unarchive CNI
    become: true
    ansible.builtin.unarchive:
      src: /home/{{ ansible_user }}/cni-plugins-linux-arm64-v1.1.1.tgz
      dest: /opt/cni/bin
      remote_src: true

  - name: Unarchive containerd
    become: true
    ansible.builtin.unarchive:
      src: /home/{{ ansible_user }}/containerd-1.6.12-linux-arm64.tar.gz
      dest: /usr/local
      remote_src: true

  - name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
    become: true
    ansible.builtin.shell: |
      swapoff -a
    register: my_output
    changed_when: my_output.rc != 0 # Uses the return code to define when the task has changed.

  - name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
    become: true
    ansible.builtin.replace:
      path: /etc/fstab
      regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
      replace: '# \1'

  - name: Update the apt cache
    become: true
    ansible.builtin.apt:
      update_cache: true

  - name: Remove uncomplicated firewall
    become: true
    ansible.builtin.apt:
      name: ufw
      state: absent

  - name: Install apt-transport-https
    become: true
    ansible.builtin.apt:
      name: apt-transport-https
      state: present

  - name: Install ca-certificates
    become: true
    ansible.builtin.apt:
      name: ca-certificates
      state: present

  - name: Install firewalld
    become: true
    ansible.builtin.apt:
      name: firewalld
      state: present

  - name: Create directory for keyrings
    become: true
    ansible.builtin.file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'

  - name: Download the Google Cloud public signing key
    become: true
    ansible.builtin.get_url:
      dest: /etc/apt/keyrings/kubernetes-archive-keyring.gpg
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      mode: '0755'

  - name: Create kubernetes.list file
    become: true
    ansible.builtin.file:
      path: /etc/apt/sources.list.d/kubernetes.list
      state: touch
      mode: '0755'
      access_time: preserve

  - name: Add kubernetes apt repository to kubernetes.list file
    become: true
    ansible.builtin.lineinfile:
      path: /etc/apt/sources.list.d/kubernetes.list
      line: deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main
      insertbefore: BOF

  - name: Open Kubernetes API server port
    become: true
    ansible.posix.firewalld:
      port: 6443/tcp
      permanent: true
      state: enabled

  - name: Open etcd server client API port
    become: true
    ansible.posix.firewalld:
      port: 2379-2380/tcp
      permanent: true
      state: enabled

  - name: Open kubelet API port
    become: true
    ansible.posix.firewalld:
      port: 10250/tcp
      permanent: true
      state: enabled

  - name: Open kube-scheduler port
    become: true
    ansible.posix.firewalld:
      port: 10259/tcp
      permanent: true
      state: enabled

  - name: Open kube-controller-manager port
    become: true
    ansible.posix.firewalld:
      port: 10257/tcp
      permanent: true
      state: enabled

  - name: Update the apt cache 2
    become: true
    ansible.builtin.apt:
      update_cache: true

  - name: Install kubeadm
    become: true
    ansible.builtin.apt:
      name: kubeadm
      state: present

  - name: Install kubelet
    become: true
    ansible.builtin.apt:
      name: kubelet
      state: present

  - name: Install kubectl
    become: true
    ansible.builtin.apt:
      name: kubectl
      state: present
...
